From e39d7133a336850f37a22b57f1d97dac03c558e3 Mon Sep 17 00:00:00 2001
From: Sandeep Chandran <sandeep.chandran@sky.uk>
Date: Thu, 11 Feb 2021 15:55:31 +0000
Subject: [PATCH] Add audio sockets permissions for container support
Source: SKY
License: CLOSED
Upstream-Status: Pending
Signed-off-by: Sandeep Chandran <sandeep.chandran@sky.uk>

---
 src/audio_if_client.cpp |  2 +-
 src/audio_server.cpp    | 29 ++++++++++++++++++++++++++++-
 2 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/src/audio_if_client.cpp b/src/audio_if_client.cpp
index 6f7f0a2..70e41b0 100644
--- a/src/audio_if_client.cpp
+++ b/src/audio_if_client.cpp
@@ -475,7 +475,7 @@ int audio_hw_load_interface(audio_hw_device_t **dev)
   }
 
   client = new AudioClient(
-    grpc::CreateChannel((url) ? url : "unix:///opt/audio_socket",
+    grpc::CreateChannel((url) ? url : "unix:///tmp/audio_socket",
                         grpc::InsecureChannelCredentials()));
 
   *dev = &device;
diff --git a/src/audio_server.cpp b/src/audio_server.cpp
index f41fff8..ca7dba3 100644
--- a/src/audio_server.cpp
+++ b/src/audio_server.cpp
@@ -4,6 +4,7 @@
 #include <unistd.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <grp.h>
 
 #include <boost/interprocess/managed_shared_memory.hpp>
 #include <cstdlib>
@@ -877,10 +878,34 @@ class AudioServiceImpl final : public AudioService::Service
 std::mutex AudioServiceImpl::map_out_mutex_;
 std::mutex AudioServiceImpl::map_in_mutex_;
 
+static void SetAudioPermissions(const char* file_path){
+  //add file to audio group with correct permissions rw
+  struct group grp, *result = nullptr;
+  char group_buf[512];
+  gid_t audio_gid = 0;
+
+  if (getgrnam_r("audio", &grp, group_buf, sizeof(group_buf), &result) < 0)
+  {
+    std::cerr << "failed to get gid of \"audio\" group";
+  }
+  else if (result != nullptr)
+  {
+    audio_gid = result->gr_gid;
+  }
+
+  struct stat buf;
+  if (stat(file_path, &buf) != 0)
+    return;
+
+  chown(file_path, buf.st_uid, audio_gid);
+  chmod(file_path, (buf.st_mode & 0717) | 0060);
+}
+
 void RunServer()
 {
   const char *url = std::getenv("AUDIO_SERVER_SOCKET");
-  std::string server_address("unix:///opt/audio_socket");
+  std::string socket_location("/tmp/audio_socket");
+  std::string server_address("unix://" + socket_location);
   AudioServiceImpl service;
   if (url) {
       server_address = url;
@@ -889,6 +914,8 @@ void RunServer()
   builder.AddListeningPort(server_address, grpc::InsecureServerCredentials());
   builder.RegisterService(&service);
   std::unique_ptr<Server> server(builder.BuildAndStart());
+  SetAudioPermissions(socket_location.c_str());
+  SetAudioPermissions("/dev/shm/AudioServiceShmem");
   std::cout << "[AudioServer] listening on " << server_address << std::endl;
   server->Wait();
 }
-- 
2.25.1

